/* eslint-disable prettier/prettier */
const dotenv = require('dotenv');

dotenv.config({ path: '../config.env' });

const mongoose = require('mongoose');
const faker = require('faker');
const Book = require('../models/bookModel');

const DB = process.env.DATABASE.replace(
  '<PASSWORD>',
  process.env.DATABASE_PASSWORD
);

mongoose
  .connect(DB, {
    useUnifiedTopology: true,
    useNewUrlParser: true,
    useCreateIndex: true,
    useFindAndModify: false
  })
  .then(() => console.log('DB connection successful!'))
  .catch(err => console.log(err));

const publishers = ['5e4c1c885451fc08ca44051d', '5e4c1c885451fc08ca440519', '5e4c1c885451fc08ca44051e', '5e4c1c885451fc08ca440520', '5e4c1c885451fc08ca44051f', '5e4c1c885451fc08ca44051b', '5e4c1c885451fc08ca44051a', '5e4c1c885451fc08ca440521', '5e4c1c885451fc08ca440522', '5e4c1c885451fc08ca44051c']

// LIST OF BOOKS
const listOfBooks = [
  {
    author: 'Fyodor Dostoyevsky',
    name: 'Crime and Punishment',
    imageThumbnailUrl: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1382846449i/7144._SY75_.jpg',
    imageUrl: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1382846449l/7144.jpg',
    description: 'Raskolnikov, a destitute and desperate former student, wanders through the slums of St Petersburg and commits a random murder without remorse or regret. He imagines himself to be a great man, a Napoleon: acting for a higher purpose beyond conventional moral law. But as he embarks on a dangerous game of cat and mouse with a suspicious police investigator, Raskolnikov is pursued by the growing voice of his conscience and finds the noose of his own guilt tightening around his neck. Only Sonya, a downtrodden prostitute, can offer the chance of redemption.',
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Brothers Karamazov',
    imageThumbnailUrl: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1172870531i/226381._SY75_.jpg',
    imageUrl: 'https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1172870531l/226381._SY475_.jpg',
    description: 'The Brothers Karamazov tells the dramatic story of four brothers Dmitri, pleasure-seeking, impatient, unruly . . . Ivan, brilliant and morose . . . Alyosha, gentle, loving, honest . . . and the illegitimate Smerdyakov, sly, silent, cruel. Driven by intense passion, they become involved in the brutal murder of their own father, one of the most loathsome characters in all literature.',
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Idiot',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Gambler',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Double',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The House of the Dead',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'Notes from the Underground',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'Poor Folk and Other Stories',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'White Nights',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Dream of a Ridiculous Man',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'A Nasty Story',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'Poor Folk',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Adolescent',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'Netochka Nezvanova',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Fyodor Dostoyevsky',
    name: 'The Insulted and Humiliated',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Bulgakov',
    name: 'Heart of a Dog',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Bulgakov',
    name: 'Белая гвардия',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Bulgakov',
    name: 'Morphine',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Bulgakov',
    name: 'Жизнь господина де Мольера',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Lolita',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Invitation to a Beheading',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'The Gift',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Pale Fire',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Bend Sinister',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'The Luzhin Defense',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'King',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Queen',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Knave',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Despair',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'The Enchanter',
    name: 'Pnin',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Laughter in the Dark',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vladimir Nabokov',
    name: 'Mary',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Alexander Pushkin',
    name: 'Eugene Onegin',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Alexander Pushkin',
    name: 'Dubrovsky',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vasily Grossman',
    name: 'Life and Fate',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Vasily Grossman',
    name: 'Forever Flowing',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Anatoli Rybakov',
    name: 'Kinderen van de Arbat',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Anatoli Rybakov',
    name: 'Het zware zand',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Sholokhov',
    name: 'De stille Don, band 1 [De stille Don & Storm over Rusland]',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Sholokhov',
    name: 'And Quiet Flows the Don',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Sholokhov',
    name: 'The Don Flows Home to the Sea, Vol 2',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Nikolai Gogol',
    name: 'The Inspector General',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Nikolai Gogol',
    name: 'The Overcoat',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Nikolai Gogol',
    name: 'The Nose',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Nikolai Gogol',
    name: 'Dead Souls',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Mikhail Lermontov',
    name: 'A Hero of Our Time',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Aleksandr Solzhenitsyn',
    name: 'Cancer Ward',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Aleksandr Solzhenitsyn',
    name: 'The First Circle',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Aleksandr Solzhenitsyn',
    name: 'The Gulag Archipelago, 1918-1956: An Experiment in Literary Investigation, Volume 1',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Aleksandr Solzhenitsyn',
    name: 'One Day in the Life of Ivan Denisovich',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Boris Pasternak',
    name: 'Doctor Zhivago',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Ivan Turgenev',
    name: 'Mumu',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Ivan Turgenev',
    name: 'Fathers and Sons',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Ivan Turgenev',
    name: 'Home of the Gentry',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Ivan Turgenev',
    name: 'Spring Torrents',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
  {
    author: 'Boris Akunin',
    name: 'The Winter Queen',
    imageThumbnailUrl: faker.random.image(),
    imageUrl: faker.random.image(),
    description: faker.lorem.sentences(3),
    genre: ['Fantasy','Science','Classics','Western','Romance','Thriller','Mystery','Detective','Dystopia','Newspaper'][Math.floor(Math.random() * 10)],
    publisher: publishers[Math.floor(Math.random() * 10)],
    private: false,
    price: 100,
    priceDiscount: 90,
    pages: faker.random.number({ min: 10, max: 900 }),
    createdAt: faker.date.recent(),
    releaseBook: [faker.date.between(1965, 2020),faker.date.between(1965, 2020),faker.date.between(1965, 2020)],
    ratingsAverage: 0.1 * faker.random.number({ min: 20, max: 50 }).toFixed(1),
    ratingsQuantity: faker.random.number({ min: 1, max: 50 })
  },
];

// IMPORT DATA
const importData = () => {
  // eslint-disable-next-line no-restricted-syntax
  for (const book of listOfBooks) {
    (async () => {
      try {
        await Book.create(book);
        // await axios.post(`http://localhost:5000/api/v1/books`, book);
      } catch (error) {
        console.log('***error****');
        console.log(error);
      }
    })();
  };
};

// DELETE ALL DATA FROM DB
const deleteData = async () => {
  try {
    await Book.deleteMany();
    console.log('Data successfully deleted!');
  } catch (err) {
    console.log(err);
  }
};

if (process.argv[2] === '--import') {
  importData();
} else if (process.argv[2] === '--delete') {
  deleteData();
}